0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1069 (Apr 23 2015) (MSVC)
0000              4   ; This file was generated Mon Feb 27 22:15:42 2017
0000              5   ;--------------------------------------------------------
                  5   $name Module4_final_code_with_bonus
                  6   $optc51 --model-small
                  7   $printf_float
0000              9            R_DSEG    segment data
0000             10            R_CSEG    segment code
0000             11            R_BSEG    segment bit
0000             12            R_XSEG    segment xdata
0000             13            R_PSEG    segment xdata
0000             14            R_ISEG    segment idata
0000             15            R_OSEG    segment data overlay
0000             16            BIT_BANK  segment data overlay
0000             17            R_HOME    segment code
0000             18            R_GSINIT  segment code
0000             19            R_IXSEG   segment xdata
0000             20            R_CONST   segment code
0000             21            R_XINIT   segment code
0000             22            R_DINIT   segment code
0000             23   
0000             24   ;--------------------------------------------------------
0000             25   ; Public variables in this module
0000             26   ;--------------------------------------------------------
0000             27            public _main
0000             28            public _Clean_LCD
0000             29            public _LCDprint
0000             30            public _LCD_4BIT
0000             31            public _WriteCommand
0000             32            public _WriteData
0000             33            public _LCD_byte
0000             34            public _LCD_pulse
0000             35            public _TIMER0_Init
0000             36            public _waitms
0000             37            public _Timer3us
0000             38            public _UART0_Init
0000             39            public _SYSCLK_Init
0000             40            public _PORT_Init
0000             41            public __c51_external_startup
0000             42            public _LCDprint_PARM_3
0000             43            public _LCDprint_PARM_2
0000             44            public _overflow_count
0000             45   ;--------------------------------------------------------
0000             46   ; Special Function Registers
0000             47   ;--------------------------------------------------------
0000             48   _P0             DATA 0x80
0000             49   _SP             DATA 0x81
0000             50   _DPL            DATA 0x82
0000             51   _DPH            DATA 0x83
0000             52   _EMI0TC         DATA 0x84
0000             53   _EMI0CF         DATA 0x85
0000             54   _OSCLCN         DATA 0x86
0000             55   _PCON           DATA 0x87
0000             56   _TCON           DATA 0x88
0000             57   _TMOD           DATA 0x89
0000             58   _TL0            DATA 0x8a
0000             59   _TL1            DATA 0x8b
0000             60   _TH0            DATA 0x8c
0000             61   _TH1            DATA 0x8d
0000             62   _CKCON          DATA 0x8e
0000             63   _PSCTL          DATA 0x8f
0000             64   _P1             DATA 0x90
0000             65   _TMR3CN         DATA 0x91
0000             66   _TMR4CN         DATA 0x91
0000             67   _TMR3RLL        DATA 0x92
0000             68   _TMR4RLL        DATA 0x92
0000             69   _TMR3RLH        DATA 0x93
0000             70   _TMR4RLH        DATA 0x93
0000             71   _TMR3L          DATA 0x94
0000             72   _TMR4L          DATA 0x94
0000             73   _TMR3H          DATA 0x95
0000             74   _TMR4H          DATA 0x95
0000             75   _USB0ADR        DATA 0x96
0000             76   _USB0DAT        DATA 0x97
0000             77   _SCON           DATA 0x98
0000             78   _SCON0          DATA 0x98
0000             79   _SBUF           DATA 0x99
0000             80   _SBUF0          DATA 0x99
0000             81   _CPT1CN         DATA 0x9a
0000             82   _CPT0CN         DATA 0x9b
0000             83   _CPT1MD         DATA 0x9c
0000             84   _CPT0MD         DATA 0x9d
0000             85   _CPT1MX         DATA 0x9e
0000             86   _CPT0MX         DATA 0x9f
0000             87   _P2             DATA 0xa0
0000             88   _SPI0CFG        DATA 0xa1
0000             89   _SPI0CKR        DATA 0xa2
0000             90   _SPI0DAT        DATA 0xa3
0000             91   _P0MDOUT        DATA 0xa4
0000             92   _P1MDOUT        DATA 0xa5
0000             93   _P2MDOUT        DATA 0xa6
0000             94   _P3MDOUT        DATA 0xa7
0000             95   _IE             DATA 0xa8
0000             96   _CLKSEL         DATA 0xa9
0000             97   _EMI0CN         DATA 0xaa
0000             98   __XPAGE         DATA 0xaa
0000             99   _SBCON1         DATA 0xac
0000            100   _P4MDOUT        DATA 0xae
0000            101   _PFE0CN         DATA 0xaf
0000            102   _P3             DATA 0xb0
0000            103   _OSCXCN         DATA 0xb1
0000            104   _OSCICN         DATA 0xb2
0000            105   _OSCICL         DATA 0xb3
0000            106   _SBRLL1         DATA 0xb4
0000            107   _SBRLH1         DATA 0xb5
0000            108   _FLSCL          DATA 0xb6
0000            109   _FLKEY          DATA 0xb7
0000            110   _IP             DATA 0xb8
0000            111   _CLKMUL         DATA 0xb9
0000            112   _SMBTC          DATA 0xb9
0000            113   _AMX0N          DATA 0xba
0000            114   _AMX0P          DATA 0xbb
0000            115   _ADC0CF         DATA 0xbc
0000            116   _ADC0L          DATA 0xbd
0000            117   _ADC0H          DATA 0xbe
0000            118   _SFRPAGE        DATA 0xbf
0000            119   _SMB0CN         DATA 0xc0
0000            120   _SMB1CN         DATA 0xc0
0000            121   _SMB0CF         DATA 0xc1
0000            122   _SMB1CF         DATA 0xc1
0000            123   _SMB0DAT        DATA 0xc2
0000            124   _SMB1DAT        DATA 0xc2
0000            125   _ADC0GTL        DATA 0xc3
0000            126   _ADC0GTH        DATA 0xc4
0000            127   _ADC0LTL        DATA 0xc5
0000            128   _ADC0LTH        DATA 0xc6
0000            129   _P4             DATA 0xc7
0000            130   _TMR2CN         DATA 0xc8
0000            131   _TMR5CN         DATA 0xc8
0000            132   _REG01CN        DATA 0xc9
0000            133   _TMR2RLL        DATA 0xca
0000            134   _TMR5RLL        DATA 0xca
0000            135   _TMR2RLH        DATA 0xcb
0000            136   _TMR5RLH        DATA 0xcb
0000            137   _TMR2L          DATA 0xcc
0000            138   _TMR5L          DATA 0xcc
0000            139   _TMR2H          DATA 0xcd
0000            140   _TMR5H          DATA 0xcd
0000            141   _SMB0ADM        DATA 0xce
0000            142   _SMB1ADM        DATA 0xce
0000            143   _SMB0ADR        DATA 0xcf
0000            144   _SMB1ADR        DATA 0xcf
0000            145   _PSW            DATA 0xd0
0000            146   _REF0CN         DATA 0xd1
0000            147   _SCON1          DATA 0xd2
0000            148   _SBUF1          DATA 0xd3
0000            149   _P0SKIP         DATA 0xd4
0000            150   _P1SKIP         DATA 0xd5
0000            151   _P2SKIP         DATA 0xd6
0000            152   _USB0XCN        DATA 0xd7
0000            153   _PCA0CN         DATA 0xd8
0000            154   _PCA0MD         DATA 0xd9
0000            155   _PCA0CPM0       DATA 0xda
0000            156   _PCA0CPM1       DATA 0xdb
0000            157   _PCA0CPM2       DATA 0xdc
0000            158   _PCA0CPM3       DATA 0xdd
0000            159   _PCA0CPM4       DATA 0xde
0000            160   _P3SKIP         DATA 0xdf
0000            161   _ACC            DATA 0xe0
0000            162   _XBR0           DATA 0xe1
0000            163   _XBR1           DATA 0xe2
0000            164   _XBR2           DATA 0xe3
0000            165   _IT01CF         DATA 0xe4
0000            166   _CKCON1         DATA 0xe4
0000            167   _SMOD1          DATA 0xe5
0000            168   _EIE1           DATA 0xe6
0000            169   _EIE2           DATA 0xe7
0000            170   _ADC0CN         DATA 0xe8
0000            171   _PCA0CPL1       DATA 0xe9
0000            172   _PCA0CPH1       DATA 0xea
0000            173   _PCA0CPL2       DATA 0xeb
0000            174   _PCA0CPH2       DATA 0xec
0000            175   _PCA0CPL3       DATA 0xed
0000            176   _PCA0CPH3       DATA 0xee
0000            177   _RSTSRC         DATA 0xef
0000            178   _B              DATA 0xf0
0000            179   _P0MDIN         DATA 0xf1
0000            180   _P1MDIN         DATA 0xf2
0000            181   _P2MDIN         DATA 0xf3
0000            182   _P3MDIN         DATA 0xf4
0000            183   _P4MDIN         DATA 0xf5
0000            184   _EIP1           DATA 0xf6
0000            185   _EIP2           DATA 0xf7
0000            186   _SPI0CN         DATA 0xf8
0000            187   _PCA0L          DATA 0xf9
0000            188   _PCA0H          DATA 0xfa
0000            189   _PCA0CPL0       DATA 0xfb
0000            190   _PCA0CPH0       DATA 0xfc
0000            191   _PCA0CPL4       DATA 0xfd
0000            192   _PCA0CPH4       DATA 0xfe
0000            193   _VDM0CN         DATA 0xff
0000            194   _DPTR           DATA 0x8382
0000            195   _TMR2RL         DATA 0xcbca
0000            196   _TMR3RL         DATA 0x9392
0000            197   _TMR4RL         DATA 0x9392
0000            198   _TMR5RL         DATA 0xcbca
0000            199   _TMR2           DATA 0xcdcc
0000            200   _TMR3           DATA 0x9594
0000            201   _TMR4           DATA 0x9594
0000            202   _TMR5           DATA 0xcdcc
0000            203   _SBRL1          DATA 0xb5b4
0000            204   _ADC0           DATA 0xbebd
0000            205   _ADC0GT         DATA 0xc4c3
0000            206   _ADC0LT         DATA 0xc6c5
0000            207   _PCA0           DATA 0xfaf9
0000            208   _PCA0CP1        DATA 0xeae9
0000            209   _PCA0CP2        DATA 0xeceb
0000            210   _PCA0CP3        DATA 0xeeed
0000            211   _PCA0CP0        DATA 0xfcfb
0000            212   _PCA0CP4        DATA 0xfefd
0000            213   ;--------------------------------------------------------
0000            214   ; special function bits
0000            215   ;--------------------------------------------------------
0000            216   _P0_0           BIT 0x80
0000            217   _P0_1           BIT 0x81
0000            218   _P0_2           BIT 0x82
0000            219   _P0_3           BIT 0x83
0000            220   _P0_4           BIT 0x84
0000            221   _P0_5           BIT 0x85
0000            222   _P0_6           BIT 0x86
0000            223   _P0_7           BIT 0x87
0000            224   _TF1            BIT 0x8f
0000            225   _TR1            BIT 0x8e
0000            226   _TF0            BIT 0x8d
0000            227   _TR0            BIT 0x8c
0000            228   _IE1            BIT 0x8b
0000            229   _IT1            BIT 0x8a
0000            230   _IE0            BIT 0x89
0000            231   _IT0            BIT 0x88
0000            232   _P1_0           BIT 0x90
0000            233   _P1_1           BIT 0x91
0000            234   _P1_2           BIT 0x92
0000            235   _P1_3           BIT 0x93
0000            236   _P1_4           BIT 0x94
0000            237   _P1_5           BIT 0x95
0000            238   _P1_6           BIT 0x96
0000            239   _P1_7           BIT 0x97
0000            240   _S0MODE         BIT 0x9f
0000            241   _SCON0_6        BIT 0x9e
0000            242   _MCE0           BIT 0x9d
0000            243   _REN0           BIT 0x9c
0000            244   _TB80           BIT 0x9b
0000            245   _RB80           BIT 0x9a
0000            246   _TI0            BIT 0x99
0000            247   _RI0            BIT 0x98
0000            248   _SCON_6         BIT 0x9e
0000            249   _MCE            BIT 0x9d
0000            250   _REN            BIT 0x9c
0000            251   _TB8            BIT 0x9b
0000            252   _RB8            BIT 0x9a
0000            253   _TI             BIT 0x99
0000            254   _RI             BIT 0x98
0000            255   _P2_0           BIT 0xa0
0000            256   _P2_1           BIT 0xa1
0000            257   _P2_2           BIT 0xa2
0000            258   _P2_3           BIT 0xa3
0000            259   _P2_4           BIT 0xa4
0000            260   _P2_5           BIT 0xa5
0000            261   _P2_6           BIT 0xa6
0000            262   _P2_7           BIT 0xa7
0000            263   _EA             BIT 0xaf
0000            264   _ESPI0          BIT 0xae
0000            265   _ET2            BIT 0xad
0000            266   _ES0            BIT 0xac
0000            267   _ET1            BIT 0xab
0000            268   _EX1            BIT 0xaa
0000            269   _ET0            BIT 0xa9
0000            270   _EX0            BIT 0xa8
0000            271   _P3_0           BIT 0xb0
0000            272   _P3_1           BIT 0xb1
0000            273   _P3_2           BIT 0xb2
0000            274   _P3_3           BIT 0xb3
0000            275   _P3_4           BIT 0xb4
0000            276   _P3_5           BIT 0xb5
0000            277   _P3_6           BIT 0xb6
0000            278   _P3_7           BIT 0xb7
0000            279   _IP_7           BIT 0xbf
0000            280   _PSPI0          BIT 0xbe
0000            281   _PT2            BIT 0xbd
0000            282   _PS0            BIT 0xbc
0000            283   _PT1            BIT 0xbb
0000            284   _PX1            BIT 0xba
0000            285   _PT0            BIT 0xb9
0000            286   _PX0            BIT 0xb8
0000            287   _MASTER0        BIT 0xc7
0000            288   _TXMODE0        BIT 0xc6
0000            289   _STA0           BIT 0xc5
0000            290   _STO0           BIT 0xc4
0000            291   _ACKRQ0         BIT 0xc3
0000            292   _ARBLOST0       BIT 0xc2
0000            293   _ACK0           BIT 0xc1
0000            294   _SI0            BIT 0xc0
0000            295   _MASTER1        BIT 0xc7
0000            296   _TXMODE1        BIT 0xc6
0000            297   _STA1           BIT 0xc5
0000            298   _STO1           BIT 0xc4
0000            299   _ACKRQ1         BIT 0xc3
0000            300   _ARBLOST1       BIT 0xc2
0000            301   _ACK1           BIT 0xc1
0000            302   _SI1            BIT 0xc0
0000            303   _TF2            BIT 0xcf
0000            304   _TF2H           BIT 0xcf
0000            305   _TF2L           BIT 0xce
0000            306   _TF2LEN         BIT 0xcd
0000            307   _TF2CEN         BIT 0xcc
0000            308   _T2SPLIT        BIT 0xcb
0000            309   _TR2            BIT 0xca
0000            310   _T2CSS          BIT 0xc9
0000            311   _T2XCLK         BIT 0xc8
0000            312   _TF5H           BIT 0xcf
0000            313   _TF5L           BIT 0xce
0000            314   _TF5LEN         BIT 0xcd
0000            315   _TMR5CN_4       BIT 0xcc
0000            316   _T5SPLIT        BIT 0xcb
0000            317   _TR5            BIT 0xca
0000            318   _TMR5CN_1       BIT 0xc9
0000            319   _T5XCLK         BIT 0xc8
0000            320   _CY             BIT 0xd7
0000            321   _AC             BIT 0xd6
0000            322   _F0             BIT 0xd5
0000            323   _RS1            BIT 0xd4
0000            324   _RS0            BIT 0xd3
0000            325   _OV             BIT 0xd2
0000            326   _F1             BIT 0xd1
0000            327   _PARITY         BIT 0xd0
0000            328   _CF             BIT 0xdf
0000            329   _CR             BIT 0xde
0000            330   _PCA0CN_5       BIT 0xde
0000            331   _CCF4           BIT 0xdc
0000            332   _CCF3           BIT 0xdb
0000            333   _CCF2           BIT 0xda
0000            334   _CCF1           BIT 0xd9
0000            335   _CCF0           BIT 0xd8
0000            336   _ACC_7          BIT 0xe7
0000            337   _ACC_6          BIT 0xe6
0000            338   _ACC_5          BIT 0xe5
0000            339   _ACC_4          BIT 0xe4
0000            340   _ACC_3          BIT 0xe3
0000            341   _ACC_2          BIT 0xe2
0000            342   _ACC_1          BIT 0xe1
0000            343   _ACC_0          BIT 0xe0
0000            344   _AD0EN          BIT 0xef
0000            345   _AD0TM          BIT 0xee
0000            346   _AD0INT         BIT 0xed
0000            347   _AD0BUSY        BIT 0xec
0000            348   _AD0WINT        BIT 0xeb
0000            349   _AD0CM2         BIT 0xea
0000            350   _AD0CM1         BIT 0xe9
0000            351   _AD0CM0         BIT 0xe8
0000            352   _B_7            BIT 0xf7
0000            353   _B_6            BIT 0xf6
0000            354   _B_5            BIT 0xf5
0000            355   _B_4            BIT 0xf4
0000            356   _B_3            BIT 0xf3
0000            357   _B_2            BIT 0xf2
0000            358   _B_1            BIT 0xf1
0000            359   _B_0            BIT 0xf0
0000            360   _SPIF           BIT 0xff
0000            361   _WCOL           BIT 0xfe
0000            362   _MODF           BIT 0xfd
0000            363   _RXOVRN         BIT 0xfc
0000            364   _NSSMD1         BIT 0xfb
0000            365   _NSSMD0         BIT 0xfa
0000            366   _TXBMT          BIT 0xf9
0000            367   _SPIEN          BIT 0xf8
0000            368   ;--------------------------------------------------------
0000            369   ; overlayable register banks
0000            370   ;--------------------------------------------------------
0000            371            rbank0 segment data overlay
0000            372   ;--------------------------------------------------------
0000            373   ; internal ram data
0000            374   ;--------------------------------------------------------
0000            375            rseg R_DSEG
0000            376   _overflow_count:
0000            377            ds 1
0001            378   _LCDprint_PARM_2:
0001            379            ds 1
0002            380   _main_periodstring_1_55:
0002            381            ds 20
0016            382   ;--------------------------------------------------------
0016            383   ; overlayable items in internal ram 
0016            384   ;--------------------------------------------------------
0000            385            rseg    R_OSEG
0000            386   ;--------------------------------------------------------
0000            387   ; indirectly addressable internal ram data
0000            388   ;--------------------------------------------------------
0000            389            rseg R_ISEG
0000            390   ;--------------------------------------------------------
0000            391   ; absolute internal ram data
0000            392   ;--------------------------------------------------------
0000            393            DSEG
0000            394   ;--------------------------------------------------------
0000            395   ; bit data
0000            396   ;--------------------------------------------------------
0000            397            rseg R_BSEG
0000            398   _LCDprint_PARM_3:
0000            399            DBIT    1
0001            400   ;--------------------------------------------------------
0001            401   ; paged external ram data
0001            402   ;--------------------------------------------------------
0000            403            rseg R_PSEG
0000            404   ;--------------------------------------------------------
0000            405   ; external ram data
0000            406   ;--------------------------------------------------------
0000            407            rseg R_XSEG
0000            408   ;--------------------------------------------------------
0000            409   ; absolute external ram data
0000            410   ;--------------------------------------------------------
0000            411            XSEG
0000            412   ;--------------------------------------------------------
0000            413   ; external initialized ram data
0000            414   ;--------------------------------------------------------
0000            415            rseg R_IXSEG
0000            416            rseg R_HOME
0000            417            rseg R_GSINIT
0000            418            rseg R_CSEG
0000            419   ;--------------------------------------------------------
0000            420   ; Reset entry point and interrupt vectors
0000            421   ;--------------------------------------------------------
0000            422            CSEG at 0x0000
0000 020100     423            ljmp    _crt0
0003            424   ;--------------------------------------------------------
0003            425   ; global & static initialisations
0003            426   ;--------------------------------------------------------
0000            427            rseg R_HOME
0000            428            rseg R_GSINIT
0000            429            rseg R_GSINIT
0000            430   ;--------------------------------------------------------
0000            431   ; data variables initialization
0000            432   ;--------------------------------------------------------
0000            433            rseg R_DINIT
0000            434            ; The linker places a 'ret' at the end of segment R_DINIT.
0000            435   ;--------------------------------------------------------
0000            436   ; code
0000            437   ;--------------------------------------------------------
0000            438            rseg R_CSEG
0000            439   ;------------------------------------------------------------
0000            440   ;Allocation info for local variables in function '_c51_external_startup'
0000            441   ;------------------------------------------------------------
0000            442   ;------------------------------------------------------------
0000            443   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:31: char _c51_external_startup (void)
0000            444   ;        -----------------------------------------
0000            445   ;         function _c51_external_startup
0000            446   ;        -----------------------------------------
0000            447   __c51_external_startup:
0000            448            using   0
0000            449   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:33: PCA0MD&=(~0x40) ;    // DISABLE WDT: clear Watchdog Enable bit
0000 53D9BF     450            anl     _PCA0MD,#0xBF
0003            451   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:34: VDM0CN=0x80; // enable VDD monitor
0003 75FF80     452            mov     _VDM0CN,#0x80
0006            453   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:35: RSTSRC=0x02|0x04; // Enable reset on missing clock detector and VDD
0006 75EF06     454            mov     _RSTSRC,#0x06
0009            455   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:43: CLKSEL|=0b_0000_0011; // SYSCLK derived from the Internal High-Frequency Oscillator / 1.
0009 43A903     456            orl     _CLKSEL,#0x03
000C            457   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:47: OSCICN |= 0x03; // Configure internal oscillator for its maximum frequency
000C 43B203     458            orl     _OSCICN,#0x03
000F            459   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:49: P0MDOUT|=0x10; // Enable Uart TX as push-pull output
000F 43A410     460            orl     _P0MDOUT,#0x10
0012            461   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:50: P1MDOUT|=0b_0000_1111; // LCD's D4 to D7 are connected to P1.3 to P1.0
0012 43A50F     462            orl     _P1MDOUT,#0x0F
0015            463   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:51: P2MDOUT|=0b_0000_0111; // P2.2 is LCD's RS, P2.1 is LCD's RW, P2.0 is LCD's E
0015 43A607     464            orl     _P2MDOUT,#0x07
0018            465   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:52: XBR0=0x01; // Enable UART on P0.4(TX) and P0.5(RX)
0018 75E101     466            mov     _XBR0,#0x01
001B            467   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:53: XBR1=0x40; // Enable crossbar and weak pull-ups
001B 75E240     468            mov     _XBR1,#0x40
001E            469   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:56: TH1 = 0x10000-((SYSCLK/BAUDRATE)/2L);
001E 758D30     470            mov     _TH1,#0x30
0021            471   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:57: CKCON &= ~0x0B;                  // T1M = 1; SCA1:0 = xx
0021 538EF4     472            anl     _CKCON,#0xF4
0024            473   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:58: CKCON |=  0x08;
0024 438E08     474            orl     _CKCON,#0x08
0027            475   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:72: TL1 = TH1;     // Init timer 1
0027 858D8B     476            mov     _TL1,_TH1
002A            477   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:73: TMOD &= 0x0f;  // TMOD: timer 1 in 8-bit autoreload
002A 53890F     478            anl     _TMOD,#0x0F
002D            479   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:74: TMOD |= 0x20;
002D 438920     480            orl     _TMOD,#0x20
0030            481   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:75: TR1 = 1;       // Start timer1
0030 D28E       482            setb    _TR1
0032            483   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:76: SCON = 0x52;
0032 759852     484            mov     _SCON,#0x52
0035            485   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:78: return 0;
0035 758200     486            mov     dpl,#0x00
0038 22         487            ret
0039            488   ;------------------------------------------------------------
0039            489   ;Allocation info for local variables in function 'PORT_Init'
0039            490   ;------------------------------------------------------------
0039            491   ;------------------------------------------------------------
0039            492   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:82: void PORT_Init (void)
0039            493   ;        -----------------------------------------
0039            494   ;         function PORT_Init
0039            495   ;        -----------------------------------------
0039            496   _PORT_Init:
0039            497   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:84: P0MDOUT |= 0x10; // Enable UART TX as push-pull output
0039 43A410     498            orl     _P0MDOUT,#0x10
003C            499   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:85: XBR0=0b_0000_0001; // Enable UART on P0.4(TX) and P0.5(RX)
003C 75E101     500            mov     _XBR0,#0x01
003F            501   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:86: XBR1=0b_0101_0000; // Enable crossbar.  Enable T0 input.
003F 75E250     502            mov     _XBR1,#0x50
0042            503   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:87: XBR2=0b_0000_0000;
0042 75E300     504            mov     _XBR2,#0x00
0045 22         505            ret
0046            506   ;------------------------------------------------------------
0046            507   ;Allocation info for local variables in function 'SYSCLK_Init'
0046            508   ;------------------------------------------------------------
0046            509   ;------------------------------------------------------------
0046            510   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:90: void SYSCLK_Init (void)
0046            511   ;        -----------------------------------------
0046            512   ;         function SYSCLK_Init
0046            513   ;        -----------------------------------------
0046            514   _SYSCLK_Init:
0046            515   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:98: CLKSEL|=0b_0000_0011; // SYSCLK derived from the Internal High-Frequency Oscillator / 1.
0046 43A903     516            orl     _CLKSEL,#0x03
0049            517   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:102: OSCICN |= 0x03;   // Configure internal oscillator for its maximum frequency
0049 43B203     518            orl     _OSCICN,#0x03
004C            519   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:103: RSTSRC  = 0x04;   // Enable missing clock detector
004C 75EF04     520            mov     _RSTSRC,#0x04
004F 22         521            ret
0050            522   ;------------------------------------------------------------
0050            523   ;Allocation info for local variables in function 'UART0_Init'
0050            524   ;------------------------------------------------------------
0050            525   ;------------------------------------------------------------
0050            526   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:106: void UART0_Init (void)
0050            527   ;        -----------------------------------------
0050            528   ;         function UART0_Init
0050            529   ;        -----------------------------------------
0050            530   _UART0_Init:
0050            531   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:108: SCON0 = 0x10;
0050 759810     532            mov     _SCON0,#0x10
0053            533   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:111: TH1 = 0x10000-((SYSCLK/BAUDRATE)/2L);
0053 758D30     534            mov     _TH1,#0x30
0056            535   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:112: CKCON &= ~0x0B;                  // T1M = 1; SCA1:0 = xx
0056 538EF4     536            anl     _CKCON,#0xF4
0059            537   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:113: CKCON |=  0x08;
0059 438E08     538            orl     _CKCON,#0x08
005C            539   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:126: TL1 = TH1;      // Init Timer1
005C 858D8B     540            mov     _TL1,_TH1
005F            541   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:127: TMOD &= ~0xf0;  // TMOD: timer 1 in 8-bit autoreload
005F 53890F     542            anl     _TMOD,#0x0F
0062            543   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:128: TMOD |=  0x20;
0062 438920     544            orl     _TMOD,#0x20
0065            545   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:129: TR1 = 1; // START Timer1
0065 D28E       546            setb    _TR1
0067            547   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:130: TI = 1;  // Indicate TX0 ready
0067 D299       548            setb    _TI
0069 22         549            ret
006A            550   ;------------------------------------------------------------
006A            551   ;Allocation info for local variables in function 'Timer3us'
006A            552   ;------------------------------------------------------------
006A            553   ;us                        Allocated to registers r2 
006A            554   ;i                         Allocated to registers r3 
006A            555   ;------------------------------------------------------------
006A            556   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:134: void Timer3us(unsigned char us)
006A            557   ;        -----------------------------------------
006A            558   ;         function Timer3us
006A            559   ;        -----------------------------------------
006A            560   _Timer3us:
006A AA82       561            mov     r2,dpl
006C            562   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:139: CKCON|=0b_0100_0000;
006C 438E40     563            orl     _CKCON,#0x40
006F            564   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:141: TMR3RL = (-(SYSCLK)/1000000L); // Set Timer3 to overflow in 1us.
006F 7592D0     565            mov     _TMR3RL,#0xD0
0072 7593FF     566            mov     (_TMR3RL >> 8),#0xFF
0075            567   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:142: TMR3 = TMR3RL;                 // Initialize Timer3 for first overflow
0075 859294     568            mov     _TMR3,_TMR3RL
0078 859395     569            mov     (_TMR3 >> 8),(_TMR3RL >> 8)
007B            570   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:144: TMR3CN = 0x04;                 // Sart Timer3 and clear overflow flag
007B 759104     571            mov     _TMR3CN,#0x04
007E            572   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:145: for (i = 0; i < us; i++)       // Count <us> overflows
007E 7B00       573            mov     r3,#0x00
0080            574   L006006?:
0080 C3         575            clr     c
0081 EB         576            mov     a,r3
0082 9A         577            subb    a,r2
0083 5001       578            jnc     L006009?
0085            579   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:147: while (!(TMR3CN & 0x80));  // Wait for overflow
0085            580   L006001?:
0085 E591       581            mov     a,_TMR3CN
0087 30E778     582            jnb     acc.7,L006001?
008A            583   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:148: TMR3CN &= ~(0x80);         // Clear overflow indicator
008A 53917F     584            anl     _TMR3CN,#0x7F
008D            585   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:150: if (TF0==1)
008D            586   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:152: TF0=0;
008D 108DF8     587            jbc     _TF0,L006019?
0090 8001       588            sjmp    L006008?
0092            589   L006019?:
0092            590   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:153: overflow_count++;
0092 0568       591            inc     _overflow_count
0094            592   L006008?:
0094            593   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:145: for (i = 0; i < us; i++)       // Count <us> overflows
0094 0B         594            inc     r3
0095 8001       595            sjmp    L006006?
0097            596   L006009?:
0097            597   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:156: TMR3CN = 0 ;                   // Stop Timer3 and clear overflow flag
0097 759100     598            mov     _TMR3CN,#0x00
009A 22         599            ret
009B            600   ;------------------------------------------------------------
009B            601   ;Allocation info for local variables in function 'waitms'
009B            602   ;------------------------------------------------------------
009B            603   ;ms                        Allocated to registers r2 r3 
009B            604   ;j                         Allocated to registers r2 r3 
009B            605   ;------------------------------------------------------------
009B            606   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:159: void waitms (unsigned int ms)
009B            607   ;        -----------------------------------------
009B            608   ;         function waitms
009B            609   ;        -----------------------------------------
009B            610   _waitms:
009B AA82       611            mov     r2,dpl
009D AB83       612            mov     r3,dph
009F            613   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:162: for(j=ms; j!=0; j--)
009F            614   L007001?:
009F BA00F8     615            cjne    r2,#0x00,L007010?
00A2 BB00F8     616            cjne    r3,#0x00,L007010?
00A5 22         617            ret
00A6            618   L007010?:
00A6            619   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:164: Timer3us(249);
00A6 7582F9     620            mov     dpl,#0xF9
00A9 C002       621            push    ar2
00AB C003       622            push    ar3
00AD 120100     623            lcall   _Timer3us
00B0            624   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:165: Timer3us(249);
00B0 7582F9     625            mov     dpl,#0xF9
00B3 120100     626            lcall   _Timer3us
00B6            627   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:166: Timer3us(249);
00B6 7582F9     628            mov     dpl,#0xF9
00B9 120100     629            lcall   _Timer3us
00BC            630   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:167: Timer3us(250);
00BC 7582FA     631            mov     dpl,#0xFA
00BF 120100     632            lcall   _Timer3us
00C2 D003       633            pop     ar3
00C4 D002       634            pop     ar2
00C6            635   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:162: for(j=ms; j!=0; j--)
00C6 1A         636            dec     r2
00C7 BAFF38     637            cjne    r2,#0xff,L007011?
00CA 1B         638            dec     r3
00CB            639   L007011?:
00CB 8001       640            sjmp    L007001?
00CD            641   ;------------------------------------------------------------
00CD            642   ;Allocation info for local variables in function 'TIMER0_Init'
00CD            643   ;------------------------------------------------------------
00CD            644   ;------------------------------------------------------------
00CD            645   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:171: void TIMER0_Init(void)
00CD            646   ;        -----------------------------------------
00CD            647   ;         function TIMER0_Init
00CD            648   ;        -----------------------------------------
00CD            649   _TIMER0_Init:
00CD            650   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:173: TMOD&=0b_1111_0000; // Set the bits of Timer/Counter 0 to zero
00CD 5389F0     651            anl     _TMOD,#0xF0
00D0            652   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:174: TMOD|=0b_0000_0001; // Timer/Counter 0 used as a 16-bit timer
00D0 438901     653            orl     _TMOD,#0x01
00D3            654   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:175: TR0=0; // Stop Timer/Counter 0
00D3 C28C       655            clr     _TR0
00D5 22         656            ret
00D6            657   ;------------------------------------------------------------
00D6            658   ;Allocation info for local variables in function 'LCD_pulse'
00D6            659   ;------------------------------------------------------------
00D6            660   ;------------------------------------------------------------
00D6            661   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:179: void LCD_pulse (void)
00D6            662   ;        -----------------------------------------
00D6            663   ;         function LCD_pulse
00D6            664   ;        -----------------------------------------
00D6            665   _LCD_pulse:
00D6            666   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:181: LCD_E=1;
00D6 D2A0       667            setb    _P2_0
00D8            668   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:182: Timer3us(40);
00D8 758228     669            mov     dpl,#0x28
00DB 120100     670            lcall   _Timer3us
00DE            671   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:183: LCD_E=0;
00DE C2A0       672            clr     _P2_0
00E0 22         673            ret
00E1            674   ;------------------------------------------------------------
00E1            675   ;Allocation info for local variables in function 'LCD_byte'
00E1            676   ;------------------------------------------------------------
00E1            677   ;x                         Allocated to registers r2 
00E1            678   ;------------------------------------------------------------
00E1            679   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:186: void LCD_byte (unsigned char x)
00E1            680   ;        -----------------------------------------
00E1            681   ;         function LCD_byte
00E1            682   ;        -----------------------------------------
00E1            683   _LCD_byte:
00E1 AA82       684            mov     r2,dpl
00E3            685   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:189: ACC=x; //Send high nible
00E3 8AE0       686            mov     _ACC,r2
00E5            687   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:190: LCD_D7=ACC_7;
00E5 A2E7       688            mov     c,_ACC_7
00E7 9290       689            mov     _P1_0,c
00E9            690   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:191: LCD_D6=ACC_6;
00E9 A2E6       691            mov     c,_ACC_6
00EB 9291       692            mov     _P1_1,c
00ED            693   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:192: LCD_D5=ACC_5;
00ED A2E5       694            mov     c,_ACC_5
00EF 9292       695            mov     _P1_2,c
00F1            696   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:193: LCD_D4=ACC_4;
00F1 A2E4       697            mov     c,_ACC_4
00F3 9293       698            mov     _P1_3,c
00F5            699   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:194: LCD_pulse();
00F5 C002       700            push    ar2
00F7 120100     701            lcall   _LCD_pulse
00FA            702   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:195: Timer3us(40);
00FA 758228     703            mov     dpl,#0x28
00FD 120100     704            lcall   _Timer3us
0100 D002       705            pop     ar2
0102            706   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:196: ACC=x; //Send low nible
0102 8AE0       707            mov     _ACC,r2
0104            708   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:197: LCD_D7=ACC_3;
0104 A2E3       709            mov     c,_ACC_3
0106 9290       710            mov     _P1_0,c
0108            711   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:198: LCD_D6=ACC_2;
0108 A2E2       712            mov     c,_ACC_2
010A 9291       713            mov     _P1_1,c
010C            714   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:199: LCD_D5=ACC_1;
010C A2E1       715            mov     c,_ACC_1
010E 9292       716            mov     _P1_2,c
0110            717   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:200: LCD_D4=ACC_0;
0110 A2E0       718            mov     c,_ACC_0
0112 9293       719            mov     _P1_3,c
0114            720   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:201: LCD_pulse();
0114 020100     721            ljmp    _LCD_pulse
0117            722   ;------------------------------------------------------------
0117            723   ;Allocation info for local variables in function 'WriteData'
0117            724   ;------------------------------------------------------------
0117            725   ;x                         Allocated to registers r2 
0117            726   ;------------------------------------------------------------
0117            727   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:204: void WriteData (unsigned char x)
0117            728   ;        -----------------------------------------
0117            729   ;         function WriteData
0117            730   ;        -----------------------------------------
0117            731   _WriteData:
0117 AA82       732            mov     r2,dpl
0119            733   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:206: LCD_RS=1;
0119 D2A2       734            setb    _P2_2
011B            735   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:207: LCD_byte(x);
011B 8A82       736            mov     dpl,r2
011D 120100     737            lcall   _LCD_byte
0120            738   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:208: waitms(2);
0120 900002     739            mov     dptr,#0x0002
0123 020100     740            ljmp    _waitms
0126            741   ;------------------------------------------------------------
0126            742   ;Allocation info for local variables in function 'WriteCommand'
0126            743   ;------------------------------------------------------------
0126            744   ;x                         Allocated to registers r2 
0126            745   ;------------------------------------------------------------
0126            746   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:211: void WriteCommand (unsigned char x)
0126            747   ;        -----------------------------------------
0126            748   ;         function WriteCommand
0126            749   ;        -----------------------------------------
0126            750   _WriteCommand:
0126 AA82       751            mov     r2,dpl
0128            752   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:213: LCD_RS=0;
0128 C2A2       753            clr     _P2_2
012A            754   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:214: LCD_byte(x);
012A 8A82       755            mov     dpl,r2
012C 120100     756            lcall   _LCD_byte
012F            757   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:215: waitms(5);
012F 900005     758            mov     dptr,#0x0005
0132 020100     759            ljmp    _waitms
0135            760   ;------------------------------------------------------------
0135            761   ;Allocation info for local variables in function 'LCD_4BIT'
0135            762   ;------------------------------------------------------------
0135            763   ;------------------------------------------------------------
0135            764   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:218: void LCD_4BIT (void)
0135            765   ;        -----------------------------------------
0135            766   ;         function LCD_4BIT
0135            767   ;        -----------------------------------------
0135            768   _LCD_4BIT:
0135            769   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:220: LCD_E=0; // Resting state of LCD's enable is zero
0135 C2A0       770            clr     _P2_0
0137            771   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:221: LCD_RW=0; // We are only writing to the LCD in this program
0137 C2A1       772            clr     _P2_1
0139            773   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:222: waitms(20);
0139 900014     774            mov     dptr,#0x0014
013C 120100     775            lcall   _waitms
013F            776   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:224: WriteCommand(0x33);
013F 758233     777            mov     dpl,#0x33
0142 120100     778            lcall   _WriteCommand
0145            779   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:225: WriteCommand(0x33);
0145 758233     780            mov     dpl,#0x33
0148 120100     781            lcall   _WriteCommand
014B            782   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:226: WriteCommand(0x32); // Change to 4-bit mode
014B 758232     783            mov     dpl,#0x32
014E 120100     784            lcall   _WriteCommand
0151            785   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:229: WriteCommand(0x28);
0151 758228     786            mov     dpl,#0x28
0154 120100     787            lcall   _WriteCommand
0157            788   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:230: WriteCommand(0x0c);
0157 75820C     789            mov     dpl,#0x0C
015A 120100     790            lcall   _WriteCommand
015D            791   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:231: WriteCommand(0x01); // Clear screen command (takes some time)
015D 758201     792            mov     dpl,#0x01
0160 120100     793            lcall   _WriteCommand
0163            794   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:232: waitms(20); // Wait for clear screen command to finsih.
0163 900014     795            mov     dptr,#0x0014
0166 020100     796            ljmp    _waitms
0169            797   ;------------------------------------------------------------
0169            798   ;Allocation info for local variables in function 'LCDprint'
0169            799   ;------------------------------------------------------------
0169            800   ;line                      Allocated with name '_LCDprint_PARM_2'
0169            801   ;string                    Allocated to registers r2 r3 r4 
0169            802   ;j                         Allocated to registers r5 r6 
0169            803   ;------------------------------------------------------------
0169            804   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:235: void LCDprint(char * string, unsigned char line, bit clear)
0169            805   ;        -----------------------------------------
0169            806   ;         function LCDprint
0169            807   ;        -----------------------------------------
0169            808   _LCDprint:
0169 AA82       809            mov     r2,dpl
016B AB83       810            mov     r3,dph
016D ACF0       811            mov     r4,b
016F            812   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:239: WriteCommand(line==2?0xc0:0x80);
016F 7402       813            mov     a,#0x02
0171 B528B8     814            cjne    a,_LCDprint_PARM_2,L014013?
0174 7DC0       815            mov     r5,#0xC0
0176 8001       816            sjmp    L014014?
0178            817   L014013?:
0178 7D80       818            mov     r5,#0x80
017A            819   L014014?:
017A 8D82       820            mov     dpl,r5
017C C002       821            push    ar2
017E C003       822            push    ar3
0180 C004       823            push    ar4
0182 120100     824            lcall   _WriteCommand
0185            825   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:240: waitms(5);
0185 900005     826            mov     dptr,#0x0005
0188 120100     827            lcall   _waitms
018B D004       828            pop     ar4
018D D003       829            pop     ar3
018F D002       830            pop     ar2
0191            831   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:241: for(j=0; string[j]!=0; j++)     WriteData(string[j]);// Write the message
0191 7D00       832            mov     r5,#0x00
0193 7E00       833            mov     r6,#0x00
0195            834   L014003?:
0195 ED         835            mov     a,r5
0196 2A         836            add     a,r2
0197 FF         837            mov     r7,a
0198 EE         838            mov     a,r6
0199 3B         839            addc    a,r3
019A F8         840            mov     r0,a
019B 8C01       841            mov     ar1,r4
019D 8F82       842            mov     dpl,r7
019F 8883       843            mov     dph,r0
01A1 89F0       844            mov     b,r1
01A3 120100     845            lcall   __gptrget
01A6 FF         846            mov     r7,a
01A7 6001       847            jz      L014006?
01A9 8F82       848            mov     dpl,r7
01AB C002       849            push    ar2
01AD C003       850            push    ar3
01AF C004       851            push    ar4
01B1 C005       852            push    ar5
01B3 C006       853            push    ar6
01B5 120100     854            lcall   _WriteData
01B8 D006       855            pop     ar6
01BA D005       856            pop     ar5
01BC D004       857            pop     ar4
01BE D003       858            pop     ar3
01C0 D002       859            pop     ar2
01C2 0D         860            inc     r5
01C3 BD0038     861            cjne    r5,#0x00,L014003?
01C6 0E         862            inc     r6
01C7 8001       863            sjmp    L014003?
01C9            864   L014006?:
01C9            865   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:242: if(clear) for(; j<CHARS_PER_LINE; j++) WriteData(' '); // Clear the rest of the line
01C9 30D8F8     866            jnb     _LCDprint_PARM_3,L014011?
01CC 8D02       867            mov     ar2,r5
01CE 8E03       868            mov     ar3,r6
01D0            869   L014007?:
01D0 C3         870            clr     c
01D1 EA         871            mov     a,r2
01D2 9410       872            subb    a,#0x10
01D4 EB         873            mov     a,r3
01D5 6480       874            xrl     a,#0x80
01D7 9480       875            subb    a,#0x80
01D9 5001       876            jnc     L014011?
01DB 758220     877            mov     dpl,#0x20
01DE C002       878            push    ar2
01E0 C003       879            push    ar3
01E2 120100     880            lcall   _WriteData
01E5 D003       881            pop     ar3
01E7 D002       882            pop     ar2
01E9 0A         883            inc     r2
01EA BA0038     884            cjne    r2,#0x00,L014007?
01ED 0B         885            inc     r3
01EE 8001       886            sjmp    L014007?
01F0            887   L014011?:
01F0 22         888            ret
01F1            889   ;------------------------------------------------------------
01F1            890   ;Allocation info for local variables in function 'Clean_LCD'
01F1            891   ;------------------------------------------------------------
01F1            892   ;------------------------------------------------------------
01F1            893   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:246: void Clean_LCD(void){
01F1            894   ;        -----------------------------------------
01F1            895   ;         function Clean_LCD
01F1            896   ;        -----------------------------------------
01F1            897   _Clean_LCD:
01F1            898   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:247: LCDprint("                ", 1, 1);
01F1 752801     899            mov     _LCDprint_PARM_2,#0x01
01F4 D2D8       900            setb    _LCDprint_PARM_3
01F6 909878     901            mov     dptr,#__str_0
01F9 75F080     902            mov     b,#0x80
01FC 120100     903            lcall   _LCDprint
01FF            904   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:248: LCDprint("                ", 2, 1);
01FF 752802     905            mov     _LCDprint_PARM_2,#0x02
0202 D2D8       906            setb    _LCDprint_PARM_3
0204 909878     907            mov     dptr,#__str_0
0207 75F080     908            mov     b,#0x80
020A 020100     909            ljmp    _LCDprint
020D            910   ;------------------------------------------------------------
020D            911   ;Allocation info for local variables in function 'main'
020D            912   ;------------------------------------------------------------
020D            913   ;period                    Allocated to registers r2 r3 r4 r5 
020D            914   ;periodstring              Allocated with name '_main_periodstring_1_55'
020D            915   ;Capacitance               Allocated to registers r6 r7 r0 r1 
020D            916   ;Resistance                Allocated to registers r6 r7 r0 r1 
020D            917   ;------------------------------------------------------------
020D            918   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:252: void main (void)
020D            919   ;        -----------------------------------------
020D            920   ;         function main
020D            921   ;        -----------------------------------------
020D            922   _main:
020D            923   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:259: PCA0MD &= ~0x40; // WDTE = 0 (clear watchdog timer enable)
020D 53D9BF     924            anl     _PCA0MD,#0xBF
0210            925   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:260: PORT_Init();     // Initialize Port I/O
0210 120100     926            lcall   _PORT_Init
0213            927   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:261: SYSCLK_Init ();  // Initialize Oscillator
0213 120100     928            lcall   _SYSCLK_Init
0216            929   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:262: UART0_Init();    // Initialize UART0
0216 120100     930            lcall   _UART0_Init
0219            931   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:263: TIMER0_Init();
0219 120100     932            lcall   _TIMER0_Init
021C            933   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:265: LCD_4BIT();
021C 120100     934            lcall   _LCD_4BIT
021F            935   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:267: printf("\x1b[2J"); // Clear screen using ANSI escape sequence.
021F 74B8       936            mov     a,#__str_1
0221 C0E0       937            push    acc
0223 7498       938            mov     a,#(__str_1 >> 8)
0225 C0E0       939            push    acc
0227 7480       940            mov     a,#0x80
0229 C0E0       941            push    acc
022B 120100     942            lcall   _printf
022E 1581       943            dec     sp
0230 1581       944            dec     sp
0232 1581       945            dec     sp
0234            946   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:272: __FILE__, __DATE__, __TIME__);
0234            947   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:271: "Compiled: %s, %s\n\n",
0234 7478       948            mov     a,#__str_5
0236 C0E0       949            push    acc
0238 7499       950            mov     a,#(__str_5 >> 8)
023A C0E0       951            push    acc
023C 7480       952            mov     a,#0x80
023E C0E0       953            push    acc
0240 74B8       954            mov     a,#__str_4
0242 C0E0       955            push    acc
0244 7499       956            mov     a,#(__str_4 >> 8)
0246 C0E0       957            push    acc
0248 7480       958            mov     a,#0x80
024A C0E0       959            push    acc
024C 74F8       960            mov     a,#__str_3
024E C0E0       961            push    acc
0250 7499       962            mov     a,#(__str_3 >> 8)
0252 C0E0       963            push    acc
0254 7480       964            mov     a,#0x80
0256 C0E0       965            push    acc
0258 7438       966            mov     a,#__str_2
025A C0E0       967            push    acc
025C 749A       968            mov     a,#(__str_2 >> 8)
025E C0E0       969            push    acc
0260 7480       970            mov     a,#0x80
0262 C0E0       971            push    acc
0264 120100     972            lcall   _printf
0267 E581       973            mov     a,sp
0269 24F4       974            add     a,#0xf4
026B F581       975            mov     sp,a
026D            976   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:274: while (1)
026D            977   L016030?:
026D            978   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:277: TL0=0;
026D 758A00     979            mov     _TL0,#0x00
0270            980   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:278: TH0=0;
0270 758C00     981            mov     _TH0,#0x00
0273            982   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:279: TF0=0;
0273 C28D       983            clr     _TF0
0275            984   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:280: overflow_count=0;
0275 756800     985            mov     _overflow_count,#0x00
0278            986   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:282: while(P0_1!=0); // Wait for the signal to be zero
0278            987   L016001?:
0278 2081B8     988            jb      _P0_1,L016001?
027B            989   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:283: while(P0_1!=1); // Wait for the signal to be one
027B            990   L016004?:
027B 3081F8     991            jnb     _P0_1,L016004?
027E            992   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:284: TR0=1; // Start the timer
027E D28C       993            setb    _TR0
0280            994   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:285: while(P0_1!=0) // Wait for the signal to be zero
0280            995   L016009?:
0280 308178     996            jnb     _P0_1,L016014?
0283            997   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:287: if(TF0==1) // Did the 16-bit timer overflow?
0283            998   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:289: TF0=0;
0283 108DB8     999            jbc     _TF0,L016055?
0286 8001      1000            sjmp    L016009?
0288           1001   L016055?:
0288           1002   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:290: overflow_count++;
0288 0568      1003            inc     _overflow_count
028A           1004   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:293: while(P0_1!=1) // Wait for the signal to be one
028A 8001      1005            sjmp    L016009?
028C           1006   L016014?:
028C 2081F8    1007            jb      _P0_1,L016016?
028F           1008   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:295: if(TF0==1) // Did the 16-bit timer overflow?
028F           1009   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:297: TF0=0;
028F 108D38    1010            jbc     _TF0,L016057?
0292 8001      1011            sjmp    L016014?
0294           1012   L016057?:
0294           1013   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:298: overflow_count++;
0294 0568      1014            inc     _overflow_count
0296 8001      1015            sjmp    L016014?
0298           1016   L016016?:
0298           1017   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:301: TR0=0; // Stop timer 0, the 24-bit number [overflow_count-TH0-TL0] has the period!
0298 C28C      1018            clr     _TR0
029A           1019   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:302: period=(overflow_count*65536.0+TH0*256.0+TL0)*(12.0/SYSCLK);
029A 856882    1020            mov     dpl,_overflow_count
029D 120100    1021            lcall   ___uchar2fs
02A0 AA82      1022            mov     r2,dpl
02A2 AB83      1023            mov     r3,dph
02A4 ACF0      1024            mov     r4,b
02A6 FD        1025            mov     r5,a
02A7 C002      1026            push    ar2
02A9 C003      1027            push    ar3
02AB C004      1028            push    ar4
02AD C005      1029            push    ar5
02AF 900000    1030            mov     dptr,#0x0000
02B2 75F080    1031            mov     b,#0x80
02B5 7447      1032            mov     a,#0x47
02B7 120100    1033            lcall   ___fsmul
02BA AA82      1034            mov     r2,dpl
02BC AB83      1035            mov     r3,dph
02BE ACF0      1036            mov     r4,b
02C0 FD        1037            mov     r5,a
02C1 E581      1038            mov     a,sp
02C3 24FC      1039            add     a,#0xfc
02C5 F581      1040            mov     sp,a
02C7 858C82    1041            mov     dpl,_TH0
02CA C002      1042            push    ar2
02CC C003      1043            push    ar3
02CE C004      1044            push    ar4
02D0 C005      1045            push    ar5
02D2 120100    1046            lcall   ___uchar2fs
02D5 AE82      1047            mov     r6,dpl
02D7 AF83      1048            mov     r7,dph
02D9 A8F0      1049            mov     r0,b
02DB F9        1050            mov     r1,a
02DC C006      1051            push    ar6
02DE C007      1052            push    ar7
02E0 C000      1053            push    ar0
02E2 C001      1054            push    ar1
02E4 900000    1055            mov     dptr,#0x0000
02E7 75F080    1056            mov     b,#0x80
02EA 7443      1057            mov     a,#0x43
02EC 120100    1058            lcall   ___fsmul
02EF AE82      1059            mov     r6,dpl
02F1 AF83      1060            mov     r7,dph
02F3 A8F0      1061            mov     r0,b
02F5 F9        1062            mov     r1,a
02F6 E581      1063            mov     a,sp
02F8 24FC      1064            add     a,#0xfc
02FA F581      1065            mov     sp,a
02FC D005      1066            pop     ar5
02FE D004      1067            pop     ar4
0300 D003      1068            pop     ar3
0302 D002      1069            pop     ar2
0304 C006      1070            push    ar6
0306 C007      1071            push    ar7
0308 C000      1072            push    ar0
030A C001      1073            push    ar1
030C 8A82      1074            mov     dpl,r2
030E 8B83      1075            mov     dph,r3
0310 8CF0      1076            mov     b,r4
0312 ED        1077            mov     a,r5
0313 120100    1078            lcall   ___fsadd
0316 AA82      1079            mov     r2,dpl
0318 AB83      1080            mov     r3,dph
031A ACF0      1081            mov     r4,b
031C FD        1082            mov     r5,a
031D E581      1083            mov     a,sp
031F 24FC      1084            add     a,#0xfc
0321 F581      1085            mov     sp,a
0323 AE8A      1086            mov     r6,_TL0
0325 7F00      1087            mov     r7,#0x00
0327 8E82      1088            mov     dpl,r6
0329 8F83      1089            mov     dph,r7
032B C002      1090            push    ar2
032D C003      1091            push    ar3
032F C004      1092            push    ar4
0331 C005      1093            push    ar5
0333 120100    1094            lcall   ___sint2fs
0336 AE82      1095            mov     r6,dpl
0338 AF83      1096            mov     r7,dph
033A A8F0      1097            mov     r0,b
033C F9        1098            mov     r1,a
033D D005      1099            pop     ar5
033F D004      1100            pop     ar4
0341 D003      1101            pop     ar3
0343 D002      1102            pop     ar2
0345 C006      1103            push    ar6
0347 C007      1104            push    ar7
0349 C000      1105            push    ar0
034B C001      1106            push    ar1
034D 8A82      1107            mov     dpl,r2
034F 8B83      1108            mov     dph,r3
0351 8CF0      1109            mov     b,r4
0353 ED        1110            mov     a,r5
0354 120100    1111            lcall   ___fsadd
0357 AA82      1112            mov     r2,dpl
0359 AB83      1113            mov     r3,dph
035B ACF0      1114            mov     r4,b
035D FD        1115            mov     r5,a
035E E581      1116            mov     a,sp
0360 24FC      1117            add     a,#0xfc
0362 F581      1118            mov     sp,a
0364 C002      1119            push    ar2
0366 C003      1120            push    ar3
0368 C004      1121            push    ar4
036A C005      1122            push    ar5
036C 9037BD    1123            mov     dptr,#0x37BD
036F 75F086    1124            mov     b,#0x86
0372 7434      1125            mov     a,#0x34
0374 120100    1126            lcall   ___fsmul
0377 AA82      1127            mov     r2,dpl
0379 AB83      1128            mov     r3,dph
037B ACF0      1129            mov     r4,b
037D FD        1130            mov     r5,a
037E E581      1131            mov     a,sp
0380 24FC      1132            add     a,#0xfc
0382 F581      1133            mov     sp,a
0384           1134   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:306: if(Button_Cap_Select == 1 && Button_Resistor_Select == 1){
0384 308278    1135            jnb     _P0_2,L016018?
0387 308378    1136            jnb     _P0_3,L016018?
038A           1137   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:307: LCDprint("P0_2 for C",1, 1);
038A 752801    1138            mov     _LCDprint_PARM_2,#0x01
038D D2D8      1139            setb    _LCDprint_PARM_3
038F 909DB8    1140            mov     dptr,#__str_6
0392 75F080    1141            mov     b,#0x80
0395 C002      1142            push    ar2
0397 C003      1143            push    ar3
0399 C004      1144            push    ar4
039B C005      1145            push    ar5
039D 120100    1146            lcall   _LCDprint
03A0           1147   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:308: LCDprint("P0_3 for R", 2, 1);
03A0 752802    1148            mov     _LCDprint_PARM_2,#0x02
03A3 D2D8      1149            setb    _LCDprint_PARM_3
03A5 909DF8    1150            mov     dptr,#__str_7
03A8 75F080    1151            mov     b,#0x80
03AB 120100    1152            lcall   _LCDprint
03AE D005      1153            pop     ar5
03B0 D004      1154            pop     ar4
03B2 D003      1155            pop     ar3
03B4 D002      1156            pop     ar2
03B6           1157   L016018?:
03B6           1158   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:311: if(Button_Cap_Select == 0 && Button_Resistor_Select == 1){
03B6 308238    1159            jnb     _P0_2,L016060?
03B9 020100    1160            ljmp    L016021?
03BC           1161   L016060?:
03BC 2083B8    1162            jb      _P0_3,L016061?
03BF 020100    1163            ljmp    L016021?
03C2           1164   L016061?:
03C2           1165   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:312: Capacitance = (1440000000*period)/(RA+2*RB);
03C2 C002      1166            push    ar2
03C4 C003      1167            push    ar3
03C6 C004      1168            push    ar4
03C8 C005      1169            push    ar5
03CA C002      1170            push    ar2
03CC C003      1171            push    ar3
03CE C004      1172            push    ar4
03D0 C005      1173            push    ar5
03D2 90A950    1174            mov     dptr,#0xA950
03D5 75F0AB    1175            mov     b,#0xAB
03D8 744E      1176            mov     a,#0x4E
03DA 120100    1177            lcall   ___fsmul
03DD AE82      1178            mov     r6,dpl
03DF AF83      1179            mov     r7,dph
03E1 A8F0      1180            mov     r0,b
03E3 F9        1181            mov     r1,a
03E4 E581      1182            mov     a,sp
03E6 24FC      1183            add     a,#0xfc
03E8 F581      1184            mov     sp,a
03EA E4        1185            clr     a
03EB C0E0      1186            push    acc
03ED 7480      1187            mov     a,#0x80
03EF C0E0      1188            push    acc
03F1 743B      1189            mov     a,#0x3B
03F3 C0E0      1190            push    acc
03F5 7445      1191            mov     a,#0x45
03F7 C0E0      1192            push    acc
03F9 8E82      1193            mov     dpl,r6
03FB 8F83      1194            mov     dph,r7
03FD 88F0      1195            mov     b,r0
03FF E9        1196            mov     a,r1
0400 120100    1197            lcall   ___fsdiv
0403 AE82      1198            mov     r6,dpl
0405 AF83      1199            mov     r7,dph
0407 A8F0      1200            mov     r0,b
0409 F9        1201            mov     r1,a
040A E581      1202            mov     a,sp
040C 24FC      1203            add     a,#0xfc
040E F581      1204            mov     sp,a
0410 D005      1205            pop     ar5
0412 D004      1206            pop     ar4
0414 D003      1207            pop     ar3
0416 D002      1208            pop     ar2
0418           1209   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:314: sprintf(periodstring, "T = %f s", period);
0418 C002      1210            push    ar2
041A C003      1211            push    ar3
041C C004      1212            push    ar4
041E C005      1213            push    ar5
0420 C006      1214            push    ar6
0422 C007      1215            push    ar7
0424 C000      1216            push    ar0
0426 C001      1217            push    ar1
0428 C002      1218            push    ar2
042A C003      1219            push    ar3
042C C004      1220            push    ar4
042E C005      1221            push    ar5
0430 7438      1222            mov     a,#__str_8
0432 C0E0      1223            push    acc
0434 749F      1224            mov     a,#(__str_8 >> 8)
0436 C0E0      1225            push    acc
0438 7480      1226            mov     a,#0x80
043A C0E0      1227            push    acc
043C 7438      1228            mov     a,#_main_periodstring_1_55
043E C0E0      1229            push    acc
0440 7493      1230            mov     a,#(_main_periodstring_1_55 >> 8)
0442 C0E0      1231            push    acc
0444 7440      1232            mov     a,#0x40
0446 C0E0      1233            push    acc
0448 120100    1234            lcall   _sprintf
044B E581      1235            mov     a,sp
044D 24F6      1236            add     a,#0xf6
044F F581      1237            mov     sp,a
0451           1238   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:315: LCDprint(periodstring, 1, 1);
0451 752801    1239            mov     _LCDprint_PARM_2,#0x01
0454 D2D8      1240            setb    _LCDprint_PARM_3
0456 909338    1241            mov     dptr,#_main_periodstring_1_55
0459 75F040    1242            mov     b,#0x40
045C 120100    1243            lcall   _LCDprint
045F           1244   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:317: sprintf(periodstring, "Cap = %.2f nF", Capacitance);
045F 74B8      1245            mov     a,#__str_9
0461 C0E0      1246            push    acc
0463 749F      1247            mov     a,#(__str_9 >> 8)
0465 C0E0      1248            push    acc
0467 7480      1249            mov     a,#0x80
0469 C0E0      1250            push    acc
046B 7438      1251            mov     a,#_main_periodstring_1_55
046D C0E0      1252            push    acc
046F 7493      1253            mov     a,#(_main_periodstring_1_55 >> 8)
0471 C0E0      1254            push    acc
0473 7440      1255            mov     a,#0x40
0475 C0E0      1256            push    acc
0477 120100    1257            lcall   _sprintf
047A E581      1258            mov     a,sp
047C 24F6      1259            add     a,#0xf6
047E F581      1260            mov     sp,a
0480           1261   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:318: LCDprint(periodstring, 2, 1);
0480 752802    1262            mov     _LCDprint_PARM_2,#0x02
0483 D2D8      1263            setb    _LCDprint_PARM_3
0485 909338    1264            mov     dptr,#_main_periodstring_1_55
0488 75F040    1265            mov     b,#0x40
048B 120100    1266            lcall   _LCDprint
048E D005      1267            pop     ar5
0490 D004      1268            pop     ar4
0492 D003      1269            pop     ar3
0494 D002      1270            pop     ar2
0496           1271   L016021?:
0496           1272   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:321: if(Button_Resistor_Select == 0 && Button_Cap_Select == 1){
0496 308300    1273            jnb     _P0_3,L016062?
0499 020100    1274            ljmp    L016024?
049C           1275   L016062?:
049C 208280    1276            jb      _P0_2,L016063?
049F 020100    1277            ljmp    L016024?
04A2           1278   L016063?:
04A2           1279   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:322: Resistance=((period*144.0/(100.0*(Cap/1000000000.0))-RA)/2.0);
04A2 C002      1280            push    ar2
04A4 C003      1281            push    ar3
04A6 C004      1282            push    ar4
04A8 C005      1283            push    ar5
04AA C002      1284            push    ar2
04AC C003      1285            push    ar3
04AE C004      1286            push    ar4
04B0 C005      1287            push    ar5
04B2 900000    1288            mov     dptr,#0x0000
04B5 75F010    1289            mov     b,#0x10
04B8 7443      1290            mov     a,#0x43
04BA 120100    1291            lcall   ___fsmul
04BD AE82      1292            mov     r6,dpl
04BF AF83      1293            mov     r7,dph
04C1 A8F0      1294            mov     r0,b
04C3 F9        1295            mov     r1,a
04C4 E581      1296            mov     a,sp
04C6 24FC      1297            add     a,#0xfc
04C8 F581      1298            mov     sp,a
04CA 74AC      1299            mov     a,#0xAC
04CC C0E0      1300            push    acc
04CE 74C5      1301            mov     a,#0xC5
04D0 C0E0      1302            push    acc
04D2 74A7      1303            mov     a,#0xA7
04D4 C0E0      1304            push    acc
04D6 7436      1305            mov     a,#0x36
04D8 C0E0      1306            push    acc
04DA 8E82      1307            mov     dpl,r6
04DC 8F83      1308            mov     dph,r7
04DE 88F0      1309            mov     b,r0
04E0 E9        1310            mov     a,r1
04E1 120100    1311            lcall   ___fsdiv
04E4 AE82      1312            mov     r6,dpl
04E6 AF83      1313            mov     r7,dph
04E8 A8F0      1314            mov     r0,b
04EA F9        1315            mov     r1,a
04EB E581      1316            mov     a,sp
04ED 24FC      1317            add     a,#0xfc
04EF F581      1318            mov     sp,a
04F1 E4        1319            clr     a
04F2 C0E0      1320            push    acc
04F4 C0E0      1321            push    acc
04F6 747A      1322            mov     a,#0x7A
04F8 C0E0      1323            push    acc
04FA 7444      1324            mov     a,#0x44
04FC C0E0      1325            push    acc
04FE 8E82      1326            mov     dpl,r6
0500 8F83      1327            mov     dph,r7
0502 88F0      1328            mov     b,r0
0504 E9        1329            mov     a,r1
0505 120100    1330            lcall   ___fssub
0508 AE82      1331            mov     r6,dpl
050A AF83      1332            mov     r7,dph
050C A8F0      1333            mov     r0,b
050E F9        1334            mov     r1,a
050F E581      1335            mov     a,sp
0511 24FC      1336            add     a,#0xfc
0513 F581      1337            mov     sp,a
0515 E4        1338            clr     a
0516 C0E0      1339            push    acc
0518 C0E0      1340            push    acc
051A C0E0      1341            push    acc
051C 7440      1342            mov     a,#0x40
051E C0E0      1343            push    acc
0520 8E82      1344            mov     dpl,r6
0522 8F83      1345            mov     dph,r7
0524 88F0      1346            mov     b,r0
0526 E9        1347            mov     a,r1
0527 120100    1348            lcall   ___fsdiv
052A AE82      1349            mov     r6,dpl
052C AF83      1350            mov     r7,dph
052E A8F0      1351            mov     r0,b
0530 F9        1352            mov     r1,a
0531 E581      1353            mov     a,sp
0533 24FC      1354            add     a,#0xfc
0535 F581      1355            mov     sp,a
0537 D005      1356            pop     ar5
0539 D004      1357            pop     ar4
053B D003      1358            pop     ar3
053D D002      1359            pop     ar2
053F           1360   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:324: sprintf(periodstring, "T = %f s", period);
053F C006      1361            push    ar6
0541 C007      1362            push    ar7
0543 C000      1363            push    ar0
0545 C001      1364            push    ar1
0547 C002      1365            push    ar2
0549 C003      1366            push    ar3
054B C004      1367            push    ar4
054D C005      1368            push    ar5
054F 7438      1369            mov     a,#__str_8
0551 C0E0      1370            push    acc
0553 749F      1371            mov     a,#(__str_8 >> 8)
0555 C0E0      1372            push    acc
0557 7480      1373            mov     a,#0x80
0559 C0E0      1374            push    acc
055B 7438      1375            mov     a,#_main_periodstring_1_55
055D C0E0      1376            push    acc
055F 7493      1377            mov     a,#(_main_periodstring_1_55 >> 8)
0561 C0E0      1378            push    acc
0563 7440      1379            mov     a,#0x40
0565 C0E0      1380            push    acc
0567 120100    1381            lcall   _sprintf
056A E581      1382            mov     a,sp
056C 24F6      1383            add     a,#0xf6
056E F581      1384            mov     sp,a
0570           1385   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:325: LCDprint(periodstring, 1, 1);
0570 752801    1386            mov     _LCDprint_PARM_2,#0x01
0573 D2D8      1387            setb    _LCDprint_PARM_3
0575 909338    1388            mov     dptr,#_main_periodstring_1_55
0578 75F040    1389            mov     b,#0x40
057B 120100    1390            lcall   _LCDprint
057E           1391   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:327: sprintf(periodstring, "R = %.2f Ohm", Resistance);
057E 7400      1392            mov     a,#__str_10
0580 C0E0      1393            push    acc
0582 74A1      1394            mov     a,#(__str_10 >> 8)
0584 C0E0      1395            push    acc
0586 7480      1396            mov     a,#0x80
0588 C0E0      1397            push    acc
058A 7438      1398            mov     a,#_main_periodstring_1_55
058C C0E0      1399            push    acc
058E 7493      1400            mov     a,#(_main_periodstring_1_55 >> 8)
0590 C0E0      1401            push    acc
0592 7440      1402            mov     a,#0x40
0594 C0E0      1403            push    acc
0596 120100    1404            lcall   _sprintf
0599 E581      1405            mov     a,sp
059B 24F6      1406            add     a,#0xf6
059D F581      1407            mov     sp,a
059F           1408   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:328: LCDprint(periodstring, 2, 1);
059F 752802    1409            mov     _LCDprint_PARM_2,#0x02
05A2 D2D8      1410            setb    _LCDprint_PARM_3
05A4 909338    1411            mov     dptr,#_main_periodstring_1_55
05A7 75F040    1412            mov     b,#0x40
05AA 120100    1413            lcall   _LCDprint
05AD           1414   L016024?:
05AD           1415   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:331: if(Button_Resistor_Select == 0 && Button_Cap_Select == 0) {
05AD 308340    1416            jnb     _P0_3,L016064?
05B0 020100    1417            ljmp    L016030?
05B3           1418   L016064?:
05B3 308280    1419            jnb     _P0_2,L016065?
05B6 020100    1420            ljmp    L016030?
05B9           1421   L016065?:
05B9           1422   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:332: Clean_LCD();
05B9 120100    1423            lcall   _Clean_LCD
05BC           1424   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:333: LCDprint("Error: Reselect", 1, 1);
05BC 752801    1425            mov     _LCDprint_PARM_2,#0x01
05BF D2D8      1426            setb    _LCDprint_PARM_3
05C1 90A1C0    1427            mov     dptr,#__str_11
05C4 75F080    1428            mov     b,#0x80
05C7 120100    1429            lcall   _LCDprint
05CA           1430   ;        C:\Users\Daniel Tong\Dropbox\ELEC291 Design Studio\module4--Capacitance Meter\code\Module4_final_code_with_bonus.c:334: waitms(100);
05CA 900064    1431            mov     dptr,#0x0064
05CD 120100    1432            lcall   _waitms
05D0 020100    1433            ljmp    L016030?
05D3           1434            rseg R_CSEG
05D3           1435   
0000           1436            rseg R_XINIT
0000           1437   
0000           1438            rseg R_CONST
0000           1439   __str_0:
0000 20202020  1440            db '                '
     20202020
     20202020
     20202020
0010 00        1441            db 0x00
0011           1442   __str_1:
0011 1B        1443            db 0x1B
0012 5B324A    1444            db '[2J'
0015 00        1445            db 0x00
0016           1446   __str_2:
0016 50657269  1447            db 'Period measurement at pin P0.1 using Timer 0.'
     6F64206D
     65617375
     72656D65
     6E742061
     74207069
     6E205030
     2E312075
     73696E67
     2054696D
     65722030
     2E
0043 0A        1448            db 0x0A
0044 46696C65  1449            db 'File: %s'
     3A202573
004C 0A        1450            db 0x0A
004D 436F6D70  1451            db 'Compi'
     69
0052 6C65643A  1452            db 'led: %s, %s'
     2025732C
     202573
005D 0A        1453            db 0x0A
005E 0A        1454            db 0x0A
005F 00        1455            db 0x00
0060           1456   __str_3:
0060 433A      1457            db 'C:'
0062 5C        1458            db 0x5C
0063 55736572  1459            db 'Users'
     73
0068 5C        1460            db 0x5C
0069 44616E69  1461            db 'Daniel Tong'
     656C2054
     6F6E67
0074 5C        1462            db 0x5C
0075 44726F70  1463            db 'Dropbox'
     626F78
007C 5C        1464            db 0x5C
007D 454C4543  1465            db 'ELEC291 Design Studio'
     32393120
     44657369
     676E2053
     74756469
     6F
0092 5C        1466            db 0x5C
0093 6D6F6475  1467            db 'module4--'
     6C65342D
     2D
009C 43617061  1468            db 'Capacitance Meter'
     63697461
     6E636520
     4D657465
     72
00AD 5C        1469            db 0x5C
00AE 636F6465  1470            db 'code'
00B2 5C        1471            db 0x5C
00B3 4D6F6475  1472            db 'Module4_final_code_with_bonus.c'
     6C65345F
     66696E61
     6C5F636F
     64655F77
     6974685F
     626F6E75
     732E63
00D2 00        1473            db 0x00
00D3           1474   __str_4:
00D3 46656220  1475            db 'Feb 27 2017'
     32372032
     303137
00DE 00        1476            db 0x00
00DF           1477   __str_5:
00DF 32323A31  1478            db '22:15:41'
     353A3431
00E7 00        1479            db 0x00
00E8           1480   __str_6:
00E8 50305F32  1481            db 'P0_2 for C'
     20666F72
     2043
00F2 00        1482            db 0x00
00F3           1483   __str_7:
00F3 50305F33  1484            db 'P0_3 for R'
     20666F72
     2052
00FD 00        1485            db 0x00
00FE           1486   __str_8:
00FE 54203D20  1487            db 'T = %f s'
     25662073
0106 00        1488            db 0x00
0107           1489   __str_9:
0107 43617020  1490            db 'Cap = %.2f nF'
     3D20252E
     3266206E
     46
0114 00        1491            db 0x00
0115           1492   __str_10:
0115 52203D20  1493            db 'R = %.2f Ohm'
     252E3266
     204F686D
0121 00        1494            db 0x00
0122           1495   __str_11:
0122 4572726F  1496            db 'Error: Reselect'
     723A2052
     6573656C
     656374
0131 00        1497            db 0x00
0132           1498   
0003           1499            CSEG
0003           1500   
0003           1501   end
